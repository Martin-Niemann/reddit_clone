import PostCard from "@/components/PostCard"
import { Community } from "@/types/Community"
import { cache } from "react"
import { Badge, Box, Button, createListCollection, Flex, Icon, NativeSelectField, NativeSelectRoot, SelectContent, SelectItem, SelectLabel, SelectRoot, SelectTrigger, SelectValueText, Tabs, Text } from "@chakra-ui/react"
import { HiOutlineCalendar, HiOutlineMegaphone, HiOutlineChevronDown, HiOutlinePencil } from "react-icons/hi2";
import { Metadata } from "next";
import { redirect } from "next/navigation";
import CreatePostButton from "@/components/CreatePostButton";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function Page({ params }: { params: Promise<{ slug: string }> }) {
  const slug = (await params).slug
  const data: Community = await getPosts(slug)
  console.log(data)

  const postCards = data.posts.map(post => <>
    <PostCard props={post} key={post.id} />
    <Box marginBlock={-3} marginInline={0} borderWidth={"1px"} borderColor={"gray.200"}></Box>
  </>)

  return (
    <>
      <Tabs.Root paddingTop={2} variant={"enclosed"} lazyMount defaultValue="posts" fitted>
        <Flex direction={"row"} justifyContent={"space-between"} alignItems={"center"}>
          <Badge variant={"subtle"} rounded={"xl"} size={"lg"} padding={3} fontSize={"2xl"} fontWeight={"normal"} color={"gray.800"} marginBottom={1}>{data.name}</Badge>
          <Tabs.List borderWidth={"0px"} rounded={"full"}>
            <Tabs.Trigger rounded={"full"} value="posts">
              Posts
            </Tabs.Trigger>
            <Tabs.Trigger rounded={"full"} value="about">
              About
            </Tabs.Trigger>
          </Tabs.List>
        </Flex>
        <Tabs.Content value="posts">
          <Flex paddingBottom={4} alignItems={"center"} justifyContent={"space-between"}>
            <CreatePostButton params={{ communityId: data.id }} />
            <Flex alignItems={"center"} marginEnd={3} marginTop={-1}>
              <NativeSelectRoot size="md" variant={"plain"} width="80px">
                <NativeSelectField placeholder="New" fontSize={"small"} fontWeight={"medium"} color={"gray.600"}>
                  <option value="react">New</option>
                  <option value="vue">Top</option>
                </NativeSelectField>
              </NativeSelectRoot>
              <Icon marginStart={-9} marginTop={1} fontSize={"16px"} color={"gray.700"}>
                <HiOutlineChevronDown />
              </Icon>
            </Flex>
          </Flex>
          <Flex direction={"column"} gapY={7}>
            {postCards}
          </Flex>
        </Tabs.Content>
        <Tabs.Content value="about">
          <Flex direction={"column"}>
            <Text fontSize={"xl"} color={"gray.800"} fontWeight={"bold"}>{data.name}</Text>
            <Text color={"gray.700"}>{data.description}</Text>
            <Flex color={"gray.700"} alignItems={"center"} gapX={2} paddingTop={"18px"} direction={"row"}>
              <Icon fontSize={"22px"} color={"gray.500"}>
                <HiOutlineMegaphone />
              </Icon>
              <Text>Moderated by {data.moderator}</Text>
            </Flex>
          </Flex>
        </Tabs.Content>
      </Tabs.Root>
    </>
  )
}

const getPosts = cache(async (slug: string) => {
  const res = await fetch(process.env.BACKEND_HOST + `/subreddit/${slug}?sort_by=newest`)
  return res.json()
})